const path = require('path');
const fs = require('fs');
const os = require('os');
const pfh = require("./positionalFileHelper");
const { getFileMapping: getFileMappingM51 } = require("./mappers/m51FileMapping");

// Unit tests for M51 (This test is based on file 358M5121010700153317.txt on ./files folder )


test("getObjectsFromFile :: Test of M51 ", () => {
  fs.readFile(path.join('.','files', '358M5121010700153317.txt'), 'utf8', (err, data) => {
   const result = pfh.getObjectsFromFile(
     data,
     getFileMappingM51());
          //00
          expect( result[0].regexc ).toEqual("00.00");
          expect( result[0].codexc ).toEqual(0);
          expect( result[0].sepexc ).toEqual('.');
          expect( result[0].scoexc ).toEqual(0);
          expect( result[0].trtexc ).toEqual(null);
          expect( result[0].emtexc ).toEqual("FGE50LMALV");
          expect( result[0].rctexc ).toEqual("EXTRACT_51");
          expect( result[0].datexc ).toEqual(new Date(2021, 0, 7, 9, 24, 47));
          expect( result[0].heuexc ).toEqual("092447");
          expect( result[0].numexc ).toEqual(2394993);
          expect( result[0].acqexc ).toEqual("0");
          expect( result[0].verexc ).toEqual("5.00");
          expect( result[0].nomsys ).toEqual("LMPT0000");
          expect( result[0].nomdtq ).toEqual("M51");
          expect( result[0].bibdtq ).toEqual("FGX10");
          expect( result[0].libexc ).toEqual("Expedi\\�o  N�: 00078010");
          expect( result[0].bibdst ).toEqual(null);
          expect( result[0].pgmdst ).toEqual(null);
          expect( result[0].pardst ).toEqual(null);
          expect( result[0].codact ).toEqual("358");
          expect( result[0].iglsit ).toEqual(10);
          expect( result[0].edisit ).toEqual("003");
          expect( result[0].imaexc ).toEqual(0);
          expect( result[0].idemsg ).toEqual(null);
          expect( result[0].dsiexc ).toEqual(null);

          //51.00
          expect( result[1].regexc ).toEqual("51.00");
          expect( result[1].codexc ).toEqual(51);
          expect( result[1].sepexc ).toEqual(".");
          expect( result[1].scoexc ).toEqual(0);
          expect( result[1].trtexc ).toEqual(null);
          expect( result[1].numliv ).toEqual(21000633);
          expect( result[1].snuliv ).toEqual(0);
          expect( result[1].codact ).toEqual("358");
          expect( result[1].codcli ).toEqual("O009");
          expect( result[1].refliv ).toEqual("38112031");
          expect( result[1].codtli ).toEqual("CC2");
          expect( result[1].codacl ).toEqual(null);
          expect( result[1].oricde ).toEqual("1");
          expect( result[1].datliv ).toEqual(new Date(2021, 0, 8, 0, 0, 0));
          expect( result[1].heuliv ).toEqual("0000");
          expect( result[1].cliliv ).toEqual("O009");
          expect( result[1].typliv ).toEqual("1");
          expect( result[1].numvag ).toEqual(21010012);
          expect( result[1].datprp ).toEqual(new Date(2021, 0, 5, 0, 0, 0));
          expect( result[1].codrgt ).toEqual(3);
          expect( result[1].touliv ).toEqual(0);
          expect( result[1].ordliv ).toEqual(0);
          expect( result[1].numtou ).toEqual("00078010");
          expect( result[1].datexp ).toEqual(new Date(2021, 0, 7, 9, 23, 0));
          expect( result[1].heuexp ).toEqual("092332");
          expect( result[1].codtra ).toEqual("100");
          expect( result[1].codcam ).toEqual("PREFATURADO");
          expect( result[1].codchf ).toEqual(null);
          expect( result[1].ctrliv ).toEqual(null);
          expect( result[1].refcnt ).toEqual("PREFATURAD");
          expect( result[1].codsit ).toEqual(null);
          expect( result[1].numplb ).toEqual("PREFATUR");
          expect( result[1].codldr ).toEqual(null);
          expect( result[1].livsol ).toEqual("1");
          expect( result[1].numcnta ).toEqual("PR");
          expect( result[1].numcntb ).toEqual("EFATURADO");
          expect( result[1].numtpt ).toEqual(2100002093);
          expect( result[1].disexc ).toEqual(null);
          
          //51.01
          expect( result[2].regexc ).toEqual("51.01");
          expect( result[2].codexc ).toEqual(51);
          expect( result[2].sepexc ).toEqual('.');
          expect( result[2].scoexc ).toEqual(1);
          expect( result[2].trtexc ).toEqual(null);
          expect( result[2].numliv ).toEqual(21000633);
          expect( result[2].snuliv ).toEqual(0);
          expect( result[2].codact ).toEqual("358");
          expect( result[2].codcli ).toEqual("O009");
          expect( result[2].refliv ).toEqual("38112031");
          expect( result[2].topliv ).toEqual(null);
          expect( result[2].topliv2 ).toEqual(null);
          expect( result[2].topliv3 ).toEqual(null);
          expect( result[2].topliv4 ).toEqual(null);
          expect( result[2].topliv5 ).toEqual(null);
          expect( result[2].dipliv ).toEqual(3);
          expect( result[2].datdep ).toEqual(null);
          expect( result[2].codnav ).toEqual(null);
          expect( result[2].libnav ).toEqual(null);
          expect( result[2].datarr ).toEqual(null);
          expect( result[2].codcie ).toEqual(null);
          expect( result[2].nomcie ).toEqual(null);
          expect( result[2].typcnt ).toEqual(null);
          expect( result[2].codtrs ).toEqual(null);
          expect( result[2].nomtrs ).toEqual(null);
          expect( result[2].opedep ).toEqual("ULMALVDBAT");
          expect( result[2].disexc ).toEqual(null);

          //51.05
          expect( result[3].regexc ).toEqual("51.05");
          expect( result[3].codexc ).toEqual(51);
          expect( result[3].sepexc ).toEqual('.');
          expect( result[3].scoexc ).toEqual(5);
          expect( result[3].trtexc ).toEqual(null);
          expect( result[3].numliv ).toEqual(21000633);
          expect( result[3].snuliv ).toEqual(0);
          expect( result[3].codact ).toEqual("358");
          expect( result[3].codcli ).toEqual("O009");
          expect( result[3].refliv ).toEqual("38112031");
          expect( result[3].codrub1 ).toEqual("CDTI");
          expect( result[3].codrub2 ).toEqual("CIRL");
          expect( result[3].codrub3 ).toEqual("DATC");
          expect( result[3].codrub4 ).toEqual("DATP");
          expect( result[3].valrub1 ).toEqual(null);
          expect( result[3].valrub2 ).toEqual(null);
          expect( result[3].valrub3 ).toEqual("20210105");
          expect( result[3].valrub4 ).toEqual(null);
          expect( result[3].disexc ).toEqual(null);

          //51.05
          expect( result[4].codexc ).toEqual(51);
          expect( result[4].sepexc ).toEqual('.');
          expect( result[4].scoexc ).toEqual(5);
          expect( result[3].trtexc ).toEqual(null);
          expect( result[3].numliv ).toEqual(21000633);
          expect( result[3].snuliv ).toEqual(0);
          expect( result[3].codact ).toEqual("358");
          expect( result[3].codcli ).toEqual("O009");
          expect( result[3].refliv ).toEqual("38112031");
          expect( result[3].codrub1 ).toEqual("CDTI");
          expect( result[3].codrub2 ).toEqual("CIRL");
          expect( result[3].codrub3 ).toEqual("DATC");
          expect( result[3].codrub4 ).toEqual("DATP");
          expect( result[3].valrub1 ).toEqual(null);
          expect( result[3].valrub2 ).toEqual(null);
          expect( result[3].valrub3 ).toEqual("20210105");
          expect( result[3].valrub4 ).toEqual(null);
          expect( result[3].disexc ).toEqual(null);

          //51.30
          expect( result[5].regexc ).toEqual("51.30");
          expect( result[5].codexc ).toEqual(51);
          expect( result[5].sepexc ).toEqual('.');
          expect( result[5].scoexc ).toEqual(30);
          expect( result[5].trtexc ).toEqual(null);
          expect( result[5].scoexc ).toEqual(30);
          expect( result[5].numliv ).toEqual(21000633);
          expect( result[5].snuliv ).toEqual(0);
          expect( result[5].codact ).toEqual("358");
          expect( result[5].codcli ).toEqual("O009");
          expect( result[5].refliv ).toEqual("38112031");
          expect( result[5].nliliv ).toEqual(0);
          expect( result[5].codpro ).toEqual(null);
          expect( result[5].valpro ).toEqual(0);
          expect( result[5].uvcliv ).toEqual(0);
          expect( result[5].mespro ).toEqual(null);
          expect( result[5].pdnliv ).toEqual(0);
          expect( result[5].motmvt ).toEqual(null);
          expect( result[5].codlot ).toEqual(null);
          expect( result[5].numlot ).toEqual(0);
          expect( result[5].codpal ).toEqual("560000358552113839");
          expect( result[5].datfvi ).toEqual(0);
          expect( result[5].numsup ).toEqual(55211383);
          expect( result[5].snusup ).toEqual(0);
          expect( result[5].codprp ).toEqual(null);
          expect( result[5].prppic ).toEqual(null);
          expect( result[5].spcpro ).toEqual(0);
          expect( result[5].pcbpro ).toEqual(0);
          expect( result[5].colcou ).toEqual(0);
          expect( result[5].coupal ).toEqual(0);
          expect( result[5].gerpal ).toEqual(0);
          expect( result[5].codemb ).toEqual("P");
          expect( result[5].codacl ).toEqual(null);
          expect( result[5].uvcsrv ).toEqual(0);
          expect( result[5].sschet ).toEqual(null);
          expect( result[5].heusup ).toEqual(0);
          expect( result[5].motimm ).toEqual(null);
          expect( result[5].numcls ).toEqual(0);

          //51.31
          expect( result[6].regexc ).toEqual("51.31");
          expect( result[6].codexc ).toEqual(51);
          expect( result[6].sepexc ).toEqual('.');
          expect( result[6].scoexc ).toEqual(31);
          expect( result[6].trtexc ).toEqual(null);
          expect( result[6].numliv ).toEqual(21000633);
          expect( result[6].snuliv ).toEqual(0);
          expect( result[6].codact ).toEqual("358");
          expect( result[6].codcli ).toEqual("O009");
          expect( result[6].refliv ).toEqual("38112031");
          expect( result[6].nliliv ).toEqual(0);
          expect( result[6].codpro ).toEqual(null);
          expect( result[6].valpro ).toEqual(0);
          expect( result[6].seqsup ).toEqual(0);
          expect( result[6].proemb ).toEqual(null);
          expect( result[6].numplb ).toEqual(null);
          expect( result[6].pdbliv ).toEqual(23600);
          expect( result[6].palgrp ).toEqual(null);
          expect( result[6].codcin ).toEqual(null);
          expect( result[6].volcol ).toEqual(27729);
          expect( result[6].disexc ).toEqual("0000000000000000                                0000000");

          //51.20
          expect( result[7].regexc ).toEqual("51.20");
          expect( result[7].codexc ).toEqual(51);
          expect( result[7].sepexc ).toEqual('.');
          expect( result[7].scoexc ).toEqual(20);
          expect( result[7].trtexc ).toEqual(null);
          expect( result[7].numliv ).toEqual(21000633);
          expect( result[7].snuliv ).toEqual(0);
          expect( result[7].codact ).toEqual("358");
          expect( result[7].codcli ).toEqual("O009");
          expect( result[7].refliv ).toEqual("38112031");
          expect( result[7].nliliv ).toEqual("00001");
          expect( result[7].codpro ).toEqual("00436271");
          expect( result[7].valpro ).toEqual(0);
          expect( result[7].edipro ).toEqual("3276006138031");
          expect( result[7].uvccde ).toEqual(2);
          expect( result[7].unicde ).toEqual("UNI");
          expect( result[7].livsol ).toEqual("1");
          expect( result[7].uvcliv ).toEqual(2);
          expect( result[7].mespro ).toEqual(null);
          expect( result[7].pdnliv ).toEqual(0);
          expect( result[7].codacl ).toEqual(null);
          expect( result[7].motmvt ).toEqual(null);
          expect( result[7].typstk ).toEqual(null);
          expect( result[7].typope ).toEqual(null);
          expect( result[7].numope ).toEqual(0);
          expect( result[7].spcpro ).toEqual(0);
          expect( result[7].pcbpro ).toEqual(0);
          expect( result[7].topliv ).toEqual(null);
          expect( result[7].dipliv ).toEqual(null);
          expect( result[7].uvcsrv ).toEqual(0);
          expect( result[7].uvcini ).toEqual(0);
          expect( result[7].numebl ).toEqual(0);
          expect( result[7].snuebl ).toEqual(0);
          expect( result[7].indpro ).toEqual(null);
          expect( result[7].disexc ).toEqual(null);

          //51.27
          expect( result[8].regexc ).toEqual("51.27");
          expect( result[8].codexc ).toEqual(51);
          expect( result[8].sepexc ).toEqual('.');
          expect( result[7].scoexc ).toEqual(20);
          expect( result[8].trtexc ).toEqual(null);
          expect( result[8].numliv ).toEqual(21000633);
          expect( result[8].snuliv ).toEqual(0);
          expect( result[8].codact ).toEqual("358");
          expect( result[8].codcli ).toEqual("O009");
          expect( result[8].refliv ).toEqual("38112031");
          expect( result[8].nliliv ).toEqual(1);
          expect( result[8].typrub1 ).toEqual("2");
          expect( result[8].typrub2 ).toEqual("2");
          expect( result[8].typrub3 ).toEqual("2");
          expect( result[8].typrub4 ).toEqual("2");
          expect( result[8].codrub1 ).toEqual("ARTB");
          expect( result[8].codrub2 ).toEqual("CDCL");
          expect( result[8].codrub3 ).toEqual("LICL");
          expect( result[8].codrub4 ).toEqual("REFB");
          expect( result[8].valrub1 ).toEqual("MODULO SUP 768X450 BCO");
          expect( result[8].valrub2 ).toEqual("385467");
          expect( result[8].valrub3 ).toEqual("385467 MOLEIRO");
          expect( result[8].valrub4 ).toEqual("436271");
          expect( result[8].disexc ).toEqual(null);

          //51.99
          expect( result[9].regexc ).toEqual("51.99");
          expect( result[9].codexc ).toEqual(51);
          expect( result[9].sepexc ).toEqual('.');
          expect( result[9].scoexc ).toEqual(99);
          expect( result[9].trtexc ).toEqual(null);
          expect( result[9].numliv ).toEqual(21000633);
          expect( result[9].snuliv ).toEqual(0);
          expect( result[9].codact ).toEqual("358");
          expect( result[9].codcli ).toEqual("O009");
          expect( result[9].refliv ).toEqual("38112031");
          expect( result[9].cumlig ).toEqual(1);
          expect( result[9].mvtexc ).toEqual(4);
          expect( result[9].cumsup ).toEqual(1);
          expect( result[9].coltot ).toEqual(200);
          expect( result[9].totpro ).toEqual(1);
          expect( result[9].pdbliv ).toEqual(23600);
          expect( result[9].pdnliv ).toEqual(23600);
          expect( result[9].disexc ).toEqual("000");

          //99.00
          expect( result[21].regexc ).toEqual("99.00");
          expect( result[21].codexc ).toEqual(99);
          expect( result[21].sepexc ).toEqual('.');
          expect( result[21].scoexc ).toEqual(0);
          expect( result[21].trtexc ).toEqual(null);
          expect( result[21].emtexc ).toEqual("FGE50LMALV");
          expect( result[21].rctexc ).toEqual("M51");
          expect( result[21].datexc ).toEqual(new Date(2021, 0, 7, 9, 24, 47));
          expect( result[21].heuexc ).toEqual("092447");
          expect( result[21].numexc ).toEqual(2394993);
          expect( result[21].cptexc ).toEqual("00000022");
          expect( result[21].nomsys ).toEqual(null);
          expect( result[21].nomdtq ).toEqual(null);
          expect( result[21].bibdtq ).toEqual(null);
          expect( result[21].idemsg ).toEqual(null);
          expect( result[21].dsiexc ).toEqual(null);
        });
      });
